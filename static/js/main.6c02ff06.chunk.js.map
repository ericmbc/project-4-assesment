{"version":3,"sources":["components/CircleSelector/CircleSelector.jsx","components/Circles/Circles.jsx","App.js","reportWebVitals.js","index.js"],"names":["CircleSelector","props","handleChange","event","handleSelect","target","value","className","selected","onClick","Circles","App","state","circle","setState","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uTAsCeA,EAlCQ,SAAAC,GAEnB,IAAMC,EAAe,SAAAC,GACjBF,EAAMG,aAAaD,EAAME,OAAOC,QAKpC,OACI,sBAAKC,UAAU,iBAAf,UACI,wBACIA,UAA8B,cAAnBN,EAAMO,SAA2B,WAAa,GACzDF,MAAM,YACNG,QAASP,EAHb,SAG+C,cAAnBD,EAAMO,SAA2B,oBAAsB,oBAEnF,wBACID,UAA8B,cAAnBN,EAAMO,SAA2B,WAAa,GACzDF,MAAM,YACNG,QAASP,EAHb,SAG+C,cAAnBD,EAAMO,SAA2B,oBAAsB,oBAEnF,wBACID,UAA8B,gBAAnBN,EAAMO,SAA6B,WAAa,GAC3DF,MAAM,cACNG,QAASP,EAHb,SAG+C,gBAAnBD,EAAMO,SAA6B,oBAAsB,oBAErF,wBACID,UAA8B,eAAnBN,EAAMO,SAA4B,WAAa,GAC1DF,MAAM,aACNG,QAASP,EAHb,SAG+C,YAAnBD,EAAMO,SAAyB,oBAAsB,wBClB9EE,G,MAXC,SAAAT,GACZ,OACI,sBAAKM,UAAU,UAAf,UACI,qBAAKA,UAA8B,cAAnBN,EAAMO,SAA2B,WAAa,KAA9D,eACA,qBAAKD,UAA8B,cAAnBN,EAAMO,SAA2B,WAAa,KAA9D,eACA,qBAAKD,UAA8B,gBAAnBN,EAAMO,SAA6B,WAAa,KAAhE,eACA,qBAAKD,UAA8B,eAAnBN,EAAMO,SAA4B,WAAa,KAA/D,oBCJNG,E,4MACJC,MAAQ,CACNJ,SAAU,I,EAGZJ,aAAe,SAACS,GACd,EAAKC,SAAS,CACZN,SAAUK,K,4CAId,WACE,OACE,sBAAKN,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,qCACA,iCACE,cAAC,EAAD,CAAgBC,SAAUO,KAAKH,MAAMJ,SAAUJ,aAAcW,KAAKX,eAClE,cAAC,EAAD,CAASI,SAAUO,KAAKH,MAAMJ,qB,GAjBtBQ,aAwBHL,ICjBAM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6c02ff06.chunk.js","sourcesContent":["\nimport React from 'react'\nimport './CircleSelector.css'\n\nconst CircleSelector = props => {\n    \n    const handleChange = event => {\n        props.handleSelect(event.target.value)\n      }\n\n    // if (props.selected)\n\n    return(\n        <div className='CircleSelector' >\n            <button \n                className={props.selected === 'circleOne' ? 'selected' : ''} \n                value='circleOne' \n                onClick={handleChange}>{props.selected === 'circleOne' ? 'Circle 1 Selected' : 'Select Circle 1' }\n            </button>\n            <button \n                className={props.selected === 'circleTwo' ? 'selected' : ''} \n                value='circleTwo' \n                onClick={handleChange}>{props.selected === 'circleTwo' ? 'Circle 2 Selected' : 'Select Circle 2' }\n            </button>\n            <button \n                className={props.selected === 'circleThree' ? 'selected' : ''} \n                value='circleThree' \n                onClick={handleChange}>{props.selected === 'circleThree' ? 'Circle 3 Selected' : 'Select Circle 3' }\n            </button>\n            <button \n                className={props.selected === 'circleFour' ? 'selected' : ''} \n                value='circleFour' \n                onClick={handleChange}>{props.selected === 'circle4' ? 'Circle 4 Selected' : 'Select Circle 4' }\n            </button>\n        </div>\n    )\n}\n\nexport default CircleSelector;","import React from 'react';\nimport './Circles.css';\n\nconst Circles = props => {\n    return(\n        <div className=\"Circles\">\n            <div className={props.selected === 'circleOne' ? 'selected' : null}>1</div>\n            <div className={props.selected === 'circleTwo' ? 'selected' : null}>2</div>\n            <div className={props.selected === 'circleThree' ? 'selected' : null}>3</div>\n            <div className={props.selected === 'circleFour' ? 'selected' : null}>4</div>\n        </div>\n    );\n}\n\nexport default Circles;","import React, { Component } from 'react';\nimport './App.css';\nimport CircleSelector from './components/CircleSelector/CircleSelector';\nimport Circles from './components/Circles/Circles';\n\nclass App extends Component {\n  state = {\n    selected: '',\n  }\n\n  handleSelect = (circle) => {\n    this.setState({\n      selected: circle\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">UNIT 4 FINAL ASSESSMENT</header>\n        <main>\n          <CircleSelector selected={this.state.selected} handleSelect={this.handleSelect} />\n          <Circles selected={this.state.selected} />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}